apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    template.alpha.openshift.io/wait-for-ready: "true"
  creationTimestamp: null
  labels:
    app: jenkins-persistent
    template: jenkins-persistent-template
  name: jenkins
spec:
  replicas: 1
  selector:
    name: jenkins
  strategy:
    resources: {}
    type: Recreate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        name: jenkins
    spec:
      containers:
        - env:
            - name: OPENSHIFT_ENABLE_OAUTH
              value: "true"
            - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
              value: "true"
            - name: DISABLE_ADMINISTRATIVE_MONITORS
              value: "false"
            - name: KUBERNETES_MASTER
              value: https://kubernetes.default:443
            - name: KUBERNETES_TRUST_CERTIFICATES
              value: "true"
            - name: JENKINS_SERVICE_NAME
              value: jenkins
            - name: JNLP_SERVICE_NAME
              value: jenkins-jnlp
            - name: ENABLE_FATAL_ERROR_LOG_FILE
              value: "false"
            - name: JENKINS_UC_INSECURE
              value: "false"
            - name: CASC_JENKINS_CONFIG
              value: /var/lib/jenkins/proxy.yaml
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 420
            periodSeconds: 360
            timeoutSeconds: 240
          name: jenkins
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 240
          resources:
            limits:
              memory: 1Gi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /var/lib/jenkins
              name: jenkins-data
            - mountPath: /etc/pki/ca-trust/source/anchors
              name: jenkins-trusted-ca-bundle
      initContainers:
        - name: configure-jenkins-agent-maven-dotm2-settings-xml-file
          image: ' '
          imagePullPolicy: IfNotPresent
          command: ['sh']
          args:
            - -c
            - >-
                echo Copying settings.xml into place ... &&
                cp /jenkins-agent-maven-dotm2-settings-xml/settings_xml /jenkins-agent-maven-dotm2-directory/settings.xml &&
                echo Done
          volumeMounts:
            - mountPath: /jenkins-agent-maven-dotm2-directory
              name: jenkins-agent-maven-dotm2-directory
            - mountPath: /jenkins-agent-maven-dotm2-settings-xml
              name: jenkins-agent-maven-dotm2-settings-xml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: jenkins
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins
        - configMap:
            name: jenkins-trusted-ca-bundle
            optional: true
          name: jenkins-trusted-ca-bundle
        - name: jenkins-agent-maven-dotm2-directory
          persistentVolumeClaim:
            claimName: jenkins-agent-maven-dotm2-directory
        - name: jenkins-agent-maven-dotm2-settings-xml
          secret:
            secretName: jenkins-agent-maven-dotm2-settings-xml
  test: false
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - jenkins
          - configure-jenkins-agent-maven-dotm2-settings-xml-file
        from:
          kind: ImageStreamTag
          name: jenkins:2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0
