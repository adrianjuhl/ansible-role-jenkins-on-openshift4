---
# Configure the jenkins resources

- name: Configure the jenkins-Route
  kubernetes.core.k8s:
    name: jenkins
    kind: Route
    api_version: route.openshift.io/v1
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        annotations:
          haproxy.router.openshift.io/timeout: 4m
          template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
        labels:
          app: jenkins
      spec:
        tls:
          insecureEdgeTerminationPolicy: Redirect
          termination: edge
        to:
          kind: Service
          name: jenkins
          weight: null

- name: Configure the jenkins-trusted-ca-bundle-ConfigMap
  kubernetes.core.k8s:
    name: jenkins-trusted-ca-bundle
    kind: ConfigMap
    api_version: v1
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        labels:
          app: jenkins
          config.openshift.io/inject-trusted-cabundle: "true"

- name: Determine if the jenkins-PersistentVolumeClaim is already present
  kubernetes.core.k8s_info:
    kind: PersistentVolumeClaim
    api_version: v1
    name: jenkins
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  register: jenkins_pvc_result
- name: Configure the jenkins-PersistentVolumeClaim
  kubernetes.core.k8s:
    kind: PersistentVolumeClaim
    api_version: v1
    name: jenkins
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        labels:
          app: jenkins
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ adrianjuhl__jenkins_on_openshift4__jenkins_pvc_storage_size }}"
        storageClassName: "{{ adrianjuhl__jenkins_on_openshift4__jenkins_pvc_storage_class_name }}"
  when: (jenkins_pvc_result.resources | length == 0)
        or (adrianjuhl__jenkins_on_openshift4__allow_pvc_reconfiguration)

- name: Determine if the jenkins-agent-maven-dotm2-directory-PersistentVolumeClaim is already present
  kubernetes.core.k8s_info:
    kind: PersistentVolumeClaim
    api_version: v1
    name: jenkins-agent-maven-dotm2-directory
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  register: jenkins_agent_maven_dotm2_directory_pvc_result
- name: Configure the jenkins-agent-maven-dotm2-directory-PersistentVolumeClaim
  kubernetes.core.k8s:
    kind: PersistentVolumeClaim
    api_version: v1
    name: jenkins-agent-maven-dotm2-directory
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        labels:
          app: jenkins
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: "{{ adrianjuhl__jenkins_on_openshift4__jenkins_agent_maven_dotm2_directory_pvc_storage_size }}"
        storageClassName: "{{ adrianjuhl__jenkins_on_openshift4__jenkins_agent_maven_dotm2_directory_pvc_storage_class_name }}"
  when: (jenkins_agent_maven_dotm2_directory_pvc_result.resources | length == 0)
        or (adrianjuhl__jenkins_on_openshift4__allow_pvc_reconfiguration)

- name: Configure the jenkins-agent-maven-ConfigMap
  kubernetes.core.k8s:
    kind: ConfigMap
    api_version: v1
    name: jenkins-agent-maven
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        labels:
          app: jenkins
          role: jenkins-agent
      data:
        maven: |-
          <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
            <name>maven</name>
            <privileged>false</privileged>
            <capOnlyOnAlivePods>false</capOnlyOnAlivePods>
            <alwaysPullImage>false</alwaysPullImage>
            <instanceCap>2147483647</instanceCap>
            <slaveConnectTimeout>1000</slaveConnectTimeout>
            <idleMinutes>0</idleMinutes>
            <activeDeadlineSeconds>0</activeDeadlineSeconds>
            <label>maven</label>
            <serviceAccount>jenkins</serviceAccount>
            <hostNetwork>false</hostNetwork>
            <volumes>
              <org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
                <mountPath>/home/jenkins/.m2</mountPath>
                <claimName>jenkins-agent-maven-dotm2-directory</claimName>
                <readOnly>false</readOnly>
              </org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
            </volumes>
            <containers>
              <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                <name>jnlp</name>
                <image>image-registry.openshift-image-registry.svc:5000/{{ adrianjuhl__jenkins_on_openshift4__jenkins_agent_maven_source_imagestreamtag_namespace }}/{{ adrianjuhl__jenkins_on_openshift4__jenkins_agent_maven_source_imagestreamtag_name }}</image>
                <privileged>false</privileged>
                <alwaysPullImage>true</alwaysPullImage>
                <workingDir>/tmp</workingDir>
                <command></command>
                <args>${computer.jnlpmac} ${computer.name}</args>
                <ttyEnabled>false</ttyEnabled>
                <resourceRequestCpu></resourceRequestCpu>
                <resourceRequestMemory></resourceRequestMemory>
                <resourceRequestEphemeralStorage></resourceRequestEphemeralStorage>
                <resourceLimitCpu></resourceLimitCpu>
                <resourceLimitMemory>1Gi</resourceLimitMemory>
                <resourceLimitEphemeralStorage></resourceLimitEphemeralStorage>
                <envVars/>
                <ports/>
                <livenessProbe>
                  <execArgs></execArgs>
                  <timeoutSeconds>0</timeoutSeconds>
                  <initialDelaySeconds>0</initialDelaySeconds>
                  <failureThreshold>0</failureThreshold>
                  <periodSeconds>0</periodSeconds>
                  <successThreshold>0</successThreshold>
                </livenessProbe>
              </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
            </containers>
            <envVars>
              <org.csanchez.jenkins.plugins.kubernetes.model.KeyValueEnvVar>
                <key>TZ</key>
                <value>{{ adrianjuhl__jenkins_on_openshift4__jenkins_timezone }}</value>
              </org.csanchez.jenkins.plugins.kubernetes.model.KeyValueEnvVar>
            </envVars>
            <annotations/>
            <imagePullSecrets/>
            <nodeProperties/>
            <yamlMergeStrategy class="org.csanchez.jenkins.plugins.kubernetes.pod.yaml.Overrides"/>
            <showRawYaml>true</showRawYaml>
          </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>

- name: Configure the jenkins-script-approval-xml-ConfigMap
  kubernetes.core.k8s:
    kind: ConfigMap
    api_version: v1
    name: jenkins-script-approval-xml
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        labels:
          app: jenkins
      data:
        script_approval_xml_file_content: "{{ adrianjuhl__jenkins_on_openshift4__jenkins_script_approval_xml_file_content }}"

- name: Configure the jenkins-agent-maven-dotm2-settings-xml-Secret
  kubernetes.core.k8s:
    kind: Secret
    api_version: v1
    name: jenkins-agent-maven-dotm2-settings-xml
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        labels:
          app: jenkins
      stringData:
        settings_xml: |-
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              {{ adrianjuhl__jenkins_on_openshift4__maven_settings_server1 }}
              {{ adrianjuhl__jenkins_on_openshift4__maven_settings_server2 }}
              {{ adrianjuhl__jenkins_on_openshift4__maven_settings_server3 }}
            </servers>
            <mirrors>
              {{ adrianjuhl__jenkins_on_openshift4__maven_settings_mirror }}
            </mirrors>
          </settings>
      type: Opaque

- name: Configure the jenkins-DeploymentConfig
  kubernetes.core.k8s:
    kind: DeploymentConfig
    api_version: apps.openshift.io/v1
    name: jenkins
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        annotations:
          template.alpha.openshift.io/wait-for-ready: "true"
        labels:
          app: jenkins
      spec:
        replicas: 1
        selector:
          name: jenkins
        strategy:
          resources: {}
          type: Recreate
        template:
          metadata:
            labels:
              name: jenkins
          spec:
            containers:
              - name: jenkins
                env:
                  - name: OPENSHIFT_ENABLE_OAUTH
                    value: "true"
                  - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
                    value: "true"
                  - name: DISABLE_ADMINISTRATIVE_MONITORS
                    value: "false"
                  - name: KUBERNETES_MASTER
                    value: https://kubernetes.default:443
                  - name: KUBERNETES_TRUST_CERTIFICATES
                    value: "true"
                  - name: JENKINS_SERVICE_NAME
                    value: jenkins
                  - name: JNLP_SERVICE_NAME
                    value: jenkins-jnlp
                  - name: ENABLE_FATAL_ERROR_LOG_FILE
                    value: "false"
                  - name: JENKINS_UC_INSECURE
                    value: "false"
                  - name: CASC_JENKINS_CONFIG
                    value: /var/lib/jenkins/proxy.yaml
                  - name: INSTALL_PLUGINS
                    value: "{{ adrianjuhl__jenkins_on_openshift4__jenkins_install_plugins }}"
                  - name: TZ
                    value: "{{ adrianjuhl__jenkins_on_openshift4__jenkins_timezone }}"
                image: ' '
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 2
                  httpGet:
                    path: /login
                    port: 8080
                  initialDelaySeconds: 420
                  periodSeconds: 360
                  timeoutSeconds: 240
                readinessProbe:
                  httpGet:
                    path: /login
                    port: 8080
                  initialDelaySeconds: 3
                  timeoutSeconds: 240
                resources:
                  limits:
                    memory: 1Gi
                securityContext:
                  capabilities: {}
                  privileged: false
                terminationMessagePath: /dev/termination-log
                volumeMounts:
                  - mountPath: /var/lib/jenkins
                    name: jenkins-data
                  - mountPath: /etc/pki/ca-trust/source/anchors
                    name: jenkins-trusted-ca-bundle
            initContainers:
              - name: jenkins-init
                image: ' '
                imagePullPolicy: IfNotPresent
                command: ['sh']
                args:
                  - -c
                  - >-
                      echo Copying scriptApproval.xml into place... &&
                      cp /jenkins-script-approval-xml /jenkins-data/scriptApproval.xml &&
                      echo Copying init.groovy.d scripts into place... &&
                      mkdir -p /jenkins-data/init.groovy.d/ &&
                      cp /jenkins-init-groovy-scripts/*.groovy /jenkins-data/init.groovy.d/ &&
                      echo Copying settings.xml into place ... &&
                      cp /jenkins-agent-maven-dotm2-settings-xml/settings_xml /jenkins-agent-maven-dotm2-directory/settings.xml &&
                      echo Done
                volumeMounts:
                  - mountPath: /jenkins-data
                    name: jenkins-data
                  - mountPath: /jenkins-script-approval-xml
                    name: jenkins-script-approval-xml
                    subPath: script_approval_xml_file_content
                  - mountPath: /jenkins-agent-maven-dotm2-directory
                    name: jenkins-agent-maven-dotm2-directory
                  - mountPath: /jenkins-agent-maven-dotm2-settings-xml
                    name: jenkins-agent-maven-dotm2-settings-xml
                  - mountPath: /jenkins-init-groovy-scripts
                    name: jenkins-init-groovy-scripts
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            serviceAccountName: jenkins
            volumes:
              - name: jenkins-data
                persistentVolumeClaim:
                  claimName: jenkins
              - name: jenkins-trusted-ca-bundle
                configMap:
                  name: jenkins-trusted-ca-bundle
                  optional: true
              - name: jenkins-script-approval-xml
                configMap:
                  name: jenkins-script-approval-xml
              - name: jenkins-agent-maven-dotm2-directory
                persistentVolumeClaim:
                  claimName: jenkins-agent-maven-dotm2-directory
              - name: jenkins-agent-maven-dotm2-settings-xml
                secret:
                  secretName: jenkins-agent-maven-dotm2-settings-xml
              - name: jenkins-init-groovy-scripts
                configMap:
                  name: jenkins-init-groovy-scripts
                  optional: true
        test: false
        triggers:
          - type: ImageChange
            imageChangeParams:
              automatic: true
              containerNames:
                - jenkins
                - jenkins-init
              from:
                kind: ImageStreamTag
                name: "{{ adrianjuhl__jenkins_on_openshift4__jenkins_source_imagestreamtag_name }}"
                namespace: "{{ adrianjuhl__jenkins_on_openshift4__jenkins_source_imagestreamtag_namespace }}"
          - type: ConfigChange

- name: Configure the jenkins-ServiceAccount
  kubernetes.core.k8s:
    kind: ServiceAccount
    api_version: v1
    name: jenkins
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        annotations:
          serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"jenkins"}}'
        labels:
          app: jenkins

- name: Configure the jenkins_edit-RoleBinding
  kubernetes.core.k8s:
    kind: RoleBinding
    api_version: authorization.openshift.io/v1
    name: jenkins_edit
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      groupNames: null
      metadata:
        labels:
          app: jenkins
      roleRef:
        name: edit
      subjects:
        - kind: ServiceAccount
          name: jenkins
      userNames: null

- name: Configure the jenkins-jnlp-Service
  kubernetes.core.k8s:
    kind: Service
    api_version: v1
    name: jenkins-jnlp
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        labels:
          app: jenkins
      spec:
        ports:
          - name: agent
            port: 50000
            protocol: TCP
            targetPort: 50000
        selector:
          name: jenkins
        sessionAffinity: None
        type: ClusterIP

- name: Configure the jenkins-Service
  kubernetes.core.k8s:
    kind: Service
    api_version: v1
    name: jenkins
    namespace: "{{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
    state: present
    resource_definition:
      metadata:
        annotations:
          service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp", "namespace": "", "kind": "Service"}]'
          service.openshift.io/infrastructure: "true"
        labels:
          app: jenkins
      spec:
        ports:
          - name: web
            port: 80
            protocol: TCP
            targetPort: 8080
        selector:
          name: jenkins
        sessionAffinity: None
        type: ClusterIP
