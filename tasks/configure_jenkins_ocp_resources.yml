---
# Configure the jenkins resources
- name: Configure the jenkins-Route
  ansible.builtin.command:
    cmd: "oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
  args:
    stdin: "{{ lookup('file', 'jenkins-Route.yaml') }}"
- name: Configure the jenkins-trusted-ca-bundle-ConfigMap
  ansible.builtin.command:
    cmd: "oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
  args:
    stdin: "{{ lookup('file', 'jenkins-trusted-ca-bundle-ConfigMap.yaml') }}"
- name: Configure the jenkins-PersistentVolumeClaim
  ansible.builtin.shell:
    cmd: "yq eval '.spec.resources.requests.storage=\"{{ adrianjuhl__jenkins_on_openshift4__jenkins_pvc_storage_size }}\" | .spec.storageClassName=\"{{ adrianjuhl__jenkins_on_openshift4__jenkins_pvc_storage_class_name }}\"' | oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
  args:
    stdin: "{{ lookup('file', 'jenkins-PersistentVolumeClaim.yaml') }}"
- name: Configure the jenkins-agent-maven-dotm2-directory-PersistentVolumeClaim
  ansible.builtin.shell:
    cmd: "yq eval '.spec.resources.requests.storage=\"{{ adrianjuhl__jenkins_on_openshift4__jenkins_agent_maven_dotm2_directory_pvc_storage_size }}\" | .spec.storageClassName=\"{{ adrianjuhl__jenkins_on_openshift4__jenkins_agent_maven_dotm2_directory_pvc_storage_class_name }}\"' | oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
  args:
    stdin: "{{ lookup('file', 'jenkins-agent-maven-dotm2-directory-PersistentVolumeClaim.yaml') }}"
- name: Configure the jenkins-agent-maven-ConfigMap
  ansible.builtin.command:
    cmd: "oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
  args:
    stdin: "{{ lookup('file', 'jenkins-agent-maven-ConfigMap.yaml') }}"
- name: Configure the jenkins-agent-maven-dotm2-settings-xml-Secret - build file content
  set_fact:
    adrianjuhl__jenkins_on_openshift4__maven_settings_xml_file_content: "{{
        lookup('file', 'jenkins-agent-maven-dotm2-settings.xml')
        | replace('<!-- SERVER1_CONFIG -->', adrianjuhl__jenkins_on_openshift4__maven_settings_server1)
        | replace('<!-- SERVER2_CONFIG -->', adrianjuhl__jenkins_on_openshift4__maven_settings_server2)
        | replace('<!-- SERVER3_CONFIG -->', adrianjuhl__jenkins_on_openshift4__maven_settings_server3)
        | replace('<!-- MIRROR_CONFIG -->', adrianjuhl__jenkins_on_openshift4__maven_settings_mirror)
      }}"
- name: Configure the jenkins-agent-maven-dotm2-settings-xml-Secret - from file content
  ansible.builtin.shell:
    cmd: "oc create secret generic jenkins-agent-maven-dotm2-settings-xml --from-literal=settings_xml='{{ adrianjuhl__jenkins_on_openshift4__maven_settings_xml_file_content }}' --dry-run=client --output=yaml --save-config | yq eval 'del(.metadata.annotations)' | oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
- name: Configure the jenkins-DeploymentConfig
  ansible.builtin.shell:
    cmd: "yq eval '.spec.template.spec.containers[] |= select(.name==\"jenkins\").env[] |= select(.name==\"INSTALL_PLUGINS\") |= .value=\"{{ adrianjuhl__jenkins_on_openshift4__jenkins_install_plugins }}\" | .spec.triggers[] |= select(.type==\"ImageChange\") |= .imageChangeParams.from.name=\"{{ adrianjuhl__jenkins_on_openshift4__jenkins_source_imagestreamtag_name }}\" | .spec.triggers[] |= select(.type==\"ImageChange\") |= .imageChangeParams.from.namespace=\"{{ adrianjuhl__jenkins_on_openshift4__jenkins_source_imagestreamtag_namespace }}\"' | oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
  args:
    stdin: "{{ lookup('file', 'jenkins-DeploymentConfig.yaml') }}"
- name: Configure the jenkins-ServiceAccount
  ansible.builtin.command:
    cmd: "oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
  args:
    stdin: "{{ lookup('file', 'jenkins-ServiceAccount.yaml') }}"
- name: Configure the jenkins_edit-RoleBinding
  ansible.builtin.command:
    cmd: "oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
  args:
    stdin: "{{ lookup('file', 'jenkins_edit-RoleBinding.yaml') }}"
- name: Configure the jenkins-jnlp-Service
  ansible.builtin.command:
    cmd: "oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
  args:
    stdin: "{{ lookup('file', 'jenkins-jnlp-Service.yaml') }}"
- name: Configure the jenkins-Service
  ansible.builtin.command:
    cmd: "oc apply --filename=- --namespace={{ adrianjuhl__jenkins_on_openshift4__openshift_namespace_jenkins }}"
  changed_when: false
  args:
    stdin: "{{ lookup('file', 'jenkins-Service.yaml') }}"
